type Query {
  sale(id: ID!): Sale!
  sales: [Sale]!
}

type Mutation {
  createSale(sale: SaleInput!): Sale!
}

type SaleCompositionItem {
  quantity: Int!
  details: BaseProduct
}

input SaleCompositionItemInput {
  id: String!
  quantity: Int!
}

type SaleComboItem {
  quantity: Int!
  details: Product
}

input SaleComboItemInput {
  id: ID!
  quantity: Int!
  composition: [SaleCompositionItemInput]! = []
}

type SaleItem {
  quantity: Int!
  details: Product
}

input SaleItemInput {
  id: ID!
  quantity: Int!
  combo: [SaleComboItemInput]! = []
  composition: [SaleCompositionItemInput]! = []
}

type Sale {
  id: ID!
  products: [SaleItem]
  customer: Customer
  discount: Int
  note: String
  datetime: Date
}

input SaleInput {
  products: [SaleItemInput!]!
  customer: String
  discount: Int
  note: String
}
